[{"path":"http://www.roald-arboel.com/aniprocess/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 aniprocess authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mikkel Roald-Arbøl. Author, maintainer.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roald-Arbøl M (2025). “aniprocess: R package signal processing filtering movement data.” doi:10.5281/zenodo.17357778, http://www.roald-arboel.com/aniprocess/.","code":"@Misc{aniprocess,   doi = {10.5281/zenodo.17357778},   title = {aniprocess: An R package for signal processing and filtering of movement data},   author = {Mikkel Roald-Arbøl},   year = {2025},   url = {http://www.roald-arboel.com/aniprocess/},   abstract = {An R package for signal processing and filtering of movement data.},   version = {0.1.0}, }"},{"path":"http://www.roald-arboel.com/aniprocess/index.html","id":"aniprocess","dir":"","previous_headings":"","what":"aniprocess – An R toolbox for reading and writing movement data","title":"aniprocess – An R toolbox for reading and writing movement data","text":"R package signal processing filtering movement data primary aim aniprocess package provide methods filtering, smoothing, processing movement trajectories.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"aniprocess – An R toolbox for reading and writing movement data","text":"can install development version aniprocess : installed package, can load :","code":"install.packages('aniprocess', repos = c('https://roaldarbol.r-universe.dev', 'https://cloud.r-project.org')) library(\"aniprocess\")"},{"path":"http://www.roald-arboel.com/aniprocess/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"aniprocess – An R toolbox for reading and writing movement data","text":"Warning 🏗️ package currently early development interface subject change. Feel free play around provide feedback.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"aniprocess – An R toolbox for reading and writing movement data","text":"enjoy package, please make sure cite . find bug, feel free open issue. cite aniprocess publications use:","code":"citation(\"aniprocess\")"},{"path":"http://www.roald-arboel.com/aniprocess/reference/aniprocess-package.html","id":null,"dir":"Reference","previous_headings":"","what":"aniprocess: An R package for signal processing and filtering of movement data — aniprocess-package","title":"aniprocess: An R package for signal processing and filtering of movement data — aniprocess-package","text":"R package signal processing filtering movement data.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/aniprocess-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"aniprocess: An R package for signal processing and filtering of movement data — aniprocess-package","text":"Maintainer: Mikkel Roald-Arbøl aniprocess.fi28v@passmail.com (ORCID)","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/calculate_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Speed from Position Data — calculate_speed","title":"Calculate Speed from Position Data — calculate_speed","text":"Calculates instantaneous speed x, y coordinates time data. Speed computed absolute magnitude velocity (change position time).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/calculate_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Speed from Position Data — calculate_speed","text":"","code":"calculate_speed(x, y, time)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/calculate_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Speed from Position Data — calculate_speed","text":"x Numeric vector x coordinates y Numeric vector y coordinates time Numeric vector time values","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/calculate_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Speed from Position Data — calculate_speed","text":"Numeric vector speeds. first value NA since speed requires two positions calculate.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/calculate_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Speed from Position Data — calculate_speed","text":"","code":"if (FALSE) { # \\dontrun{ # Inside dplyr pipeline data |>   group_by(keypoint) |>   mutate(speed = calculate_speed(x, y, time)) } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_aniframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth Movement Data — filter_aniframe","title":"Smooth Movement Data — filter_aniframe","text":"Applies smoothing filters movement tracking data reduce noise.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_aniframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth Movement Data — filter_aniframe","text":"","code":"filter_aniframe(   data,   method = c(\"rollmedian\", \"rollmean\", \"kalman\", \"sgolay\", \"lowpass\", \"highpass\",     \"lowpass_fft\", \"highpass_fft\"),   use_derivatives = FALSE,   ... )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_aniframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth Movement Data — filter_aniframe","text":"data data frame containing movement tracking data following required columns: individual: Identifier tracked subject keypoint: Identifier tracked point x: x-coordinates y: y-coordinates time: Time values Optional columns: z: z-coordinates method Character string specifying smoothing method. Options: \"kalman\": Kalman filter (see filter_kalman()) \"sgolay\": Savitzky-Golay filter (see filter_sgolay()) \"lowpass\": Low-pass filter (see filter_lowpass()) \"highpass\": High-pass filter (see filter_highpass()) \"lowpass_fft\": FFT-based low-pass filter (see filter_lowpass_fft()) \"highpass_fft\": FFT-based high-pass filter (see filter_highpass_fft()) \"rollmean\": Rolling mean filter (see filter_rollmean()) \"rollmedian\": Rolling median filter (see filter_rollmedian()) use_derivatives Filter derivative values instead coordinates (important e.g. trackball accelerometer data) ... Additional arguments passed specific filter function","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_aniframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth Movement Data — filter_aniframe","text":"data frame structure input, smoothed coordinates.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_aniframe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth Movement Data — filter_aniframe","text":"function wrapper applies various filtering methods x y (z present) coordinates. filtering method specific parameters - see documentation individual filter functions details: filter_kalman(): Kalman filter parameters filter_sgolay(): Savitzky-Golay filter parameters filter_lowpass(): Low-pass filter parameters filter_highpass(): High-pass filter parameters filter_lowpass_fft(): FFT-based low-pass filter parameters filter_highpass_fft(): FFT-based high-pass filter parameters filter_rollmean(): Rolling mean parameters (window_width, min_obs) filter_rollmedian(): Rolling median parameters (window_width, min_obs)","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_aniframe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth Movement Data — filter_aniframe","text":"","code":"if (FALSE) { # \\dontrun{ # Apply rolling median with window of 5 filter_aniframe(tracking_data, \"rollmedian\", window_width = 5, min_obs = 1) } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Butterworth Highpass Filter to Signal — filter_highpass","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"function applies highpass Butterworth filter signal using forward-backward filtering (filtfilt) achieve zero phase distortion. Butterworth filter maximally flat passband, making ideal many signal processing applications.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"","code":"filter_highpass(   x,   cutoff_freq,   sampling_rate,   order = 4,   na_action = c(\"linear\", \"spline\", \"stine\", \"locf\", \"value\", \"error\"),   keep_na = FALSE,   ... )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"x Numeric vector containing signal filtered cutoff_freq Cutoff frequency Hz. Frequencies value passed, frequencies attenuated. 0 sampling_rate/2. sampling_rate Sampling rate signal Hz. Must least twice highest frequency component signal (Nyquist criterion). order Filter order (default = 4). Controls steepness frequency rolloff: - Higher orders give sharper cutoffs may introduce ringing - Lower orders give smoother transitions less steep rolloff - Common values practice 2-8 - Values 8 rarely used due numerical instability na_action Method handle NA values filtering. One : - \"linear\": Linear interpolation (default) - \"spline\": Spline interpolation smoother curves - \"stine\": Stineman interpolation preserving data shape - \"locf\": Last observation carried forward - \"value\": Replace constant value - \"error\": Raise error NAs present keep_na Logical indicating whether restore NAs original positions filtering (default = FALSE) ... Additional arguments passed replace_na(). Common options include: - value: Numeric value replacement na_action = \"value\" - min_gap: Minimum gap size interpolate/fill - max_gap: Maximum gap size interpolate/fill","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"Numeric vector containing filtered signal","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"Butterworth filter response falls -6*order dB/octave. cutoff frequency corresponds -3dB point filter's magnitude response. Common Applications: Removing baseline drift: Use low cutoff (0.1-1 Hz) EMG analysis: Use moderate cutoff (10-20 Hz) Motion artifact removal: Use application-specific cutoff Parameter Selection Guidelines: cutoff_freq: Choose based lowest frequency want preserve order: guidelines lowpass_filter Common values field: ECG processing: order=2, cutoff=0.5 Hz EEG analysis: order=4, cutoff=1 Hz Mechanical vibrations: order=2, cutoff application-specific Missing Value Handling: function uses replace_na() internally handling missing values. See ?replace_na detailed information method parameters. NAs can optionally restored original positions filtering using keep_na = TRUE.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"Butterworth, S. (1930). Theory Filter Amplifiers. Wireless Engineer, 7, 536-541.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Butterworth Highpass Filter to Signal — filter_highpass","text":"","code":"# Generate example signal with drift t <- seq(0, 1, by = 0.001) drift <- 0.5 * t  # Linear drift signal <- sin(2*pi*10*t)  # 10 Hz signal x <- signal + drift  # Add some NAs x[sample(length(x), 10)] <- NA  # Basic filtering with linear interpolation for NAs filtered <- filter_highpass(x, cutoff_freq = 2, sampling_rate = 1000)  # Using spline interpolation with max gap constraint filtered <- filter_highpass(x, cutoff_freq = 2, sampling_rate = 1000,                            na_action = \"spline\", max_gap = 3)  # Replace NAs with zeros before filtering filtered <- filter_highpass(x, cutoff_freq = 2, sampling_rate = 1000,                            na_action = \"value\", value = 0)  # Filter but keep NAs in their original positions filtered <- filter_highpass(x, cutoff_freq = 2, sampling_rate = 1000,                            na_action = \"linear\", keep_na = TRUE)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","title":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","text":"function implements highpass filter using Fast Fourier Transform (FFT). provides sharp frequency cutoff may introduce ringing artifacts (Gibbs phenomenon).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","text":"","code":"filter_highpass_fft(   x,   cutoff_freq,   sampling_rate,   na_action = c(\"linear\", \"spline\", \"stine\", \"locf\", \"value\", \"error\"),   keep_na = FALSE,   ... )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","text":"x Numeric vector containing signal filtered cutoff_freq Cutoff frequency Hz. Frequencies value passed, frequencies attenuated. 0 sampling_rate/2. sampling_rate Sampling rate signal Hz. Must least twice highest frequency component signal (Nyquist criterion). na_action Method handle NA values filtering. One : - \"linear\": Linear interpolation (default) - \"spline\": Spline interpolation smoother curves - \"stine\": Stineman interpolation preserving data shape - \"locf\": Last observation carried forward - \"value\": Replace constant value - \"error\": Raise error NAs present keep_na Logical indicating whether restore NAs original positions filtering (default = FALSE) ... Additional arguments passed replace_na(). Common options include: - value: Numeric value replacement na_action = \"value\" - min_gap: Minimum gap size interpolate/fill - max_gap: Maximum gap size interpolate/fill","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","text":"Numeric vector containing filtered signal","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass_fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","text":"FFT-based filtering applies hard cutoff frequency domain. can advantageous : Precise frequency selection Batch processing long signals Cases sharp frequency cutoffs desired Common Applications: Removing baseline drift: Use low cutoff (0.1-1 Hz) EMG analysis: Use moderate cutoff (10-20 Hz) Motion artifact removal: Use application-specific cutoff Limitations: May introduce ringing artifacts Assumes periodic signal (can cause edge effects) Less suitable real-time processing Missing Value Handling: function uses replace_na() internally handling missing values. See ?replace_na detailed information method parameters. NAs can optionally restored original positions filtering using keep_na = TRUE.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_highpass_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply FFT-based Highpass Filter to Signal — filter_highpass_fft","text":"","code":"# Generate example signal with drift t <- seq(0, 1, by = 0.001) drift <- 0.5 * t  # Linear drift signal <- sin(2*pi*10*t)  # 10 Hz signal x <- signal + drift  # Add some NAs x[sample(length(x), 10)] <- NA  # Basic filtering with linear interpolation for NAs filtered <- filter_highpass_fft(x, cutoff_freq = 2, sampling_rate = 1000)  # Using spline interpolation with max gap constraint filtered <- filter_highpass_fft(x, cutoff_freq = 2, sampling_rate = 1000,                                na_action = \"spline\", max_gap = 3)  # Replace NAs with zeros before filtering filtered <- filter_highpass_fft(x, cutoff_freq = 2, sampling_rate = 1000,                                na_action = \"value\", value = 0)  # Filter but keep NAs in their original positions filtered <- filter_highpass_fft(x, cutoff_freq = 2, sampling_rate = 1000,                                na_action = \"linear\", keep_na = TRUE)  # Compare with Butterworth filter butter_filtered <- filter_highpass(x, 2, 1000)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":null,"dir":"Reference","previous_headings":"","what":"Kalman Filter for Regular Time Series — filter_kalman","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"Implements Kalman filter regularly sampled time series data automatic parameter selection based sampling rate. filter handles missing values (NA) provides noise reduction preserving real signal changes.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"","code":"filter_kalman(   measurements,   sampling_rate,   base_Q = NULL,   R = NULL,   initial_state = NULL,   initial_P = NULL )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"measurements Numeric vector containing measurements filtered. sampling_rate Numeric value specifying sampling rate Hz (frames per second). base_Q Optional. Process variance. NULL, automatically calculated based sampling_rate. Represents expected rate change true state. R Optional. Measurement variance. NULL, defaults 0.1. Represents noise level measurements. initial_state Optional. Initial state estimate. NULL, uses first non-NA measurement. initial_P Optional. Initial state uncertainty. NULL, calculated based sampling_rate.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"numeric vector length measurements containing filtered values.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"function implements simple Kalman filter constant position model. parameters explicitly provided, automatically configured based sampling rate: base_Q scales inversely sampling rate (base_Q ≈ 0.15/sampling_rate) R defaults 0.1 (assuming moderate measurement noise) initial_P scales sampling rate uncertainty Missing values (NA) handled relying prediction step without measurement updates.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"Parameter selection guidelines: Increase R decrease base_Q smoother output Decrease R increase base_Q responsive output high-frequency data (>100 Hz), consider reducing base_Q know sensor's noise characteristics, set R square standard deviation","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kalman Filter for Regular Time Series — filter_kalman","text":"","code":"# Basic usage with 60 Hz data measurements <- c(1, 1.1, NA, 0.9, 1.2, NA, 0.8, 1.1) filtered <- filter_kalman(measurements, sampling_rate = 60)  # Custom parameters for more aggressive filtering filtered_custom <- filter_kalman(measurements,                                 sampling_rate = 60,                                 base_Q = 0.001,                                 R = 0.2)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":null,"dir":"Reference","previous_headings":"","what":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"Implements Kalman filter irregularly sampled time series data optional resampling regular intervals. Handles variable sampling rates, missing values, automatically adjusts process variance based time intervals.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"","code":"filter_kalman_irregular(   measurements,   times,   base_Q = NULL,   R = NULL,   initial_state = NULL,   initial_P = NULL,   resample = FALSE,   resample_freq = NULL )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"measurements Numeric vector containing measurements filtered. times Numeric vector timestamps corresponding measurements. base_Q Optional. Base process variance per second. NULL, automatically calculated. R Optional. Measurement variance. NULL, defaults 0.1. initial_state Optional. Initial state estimate. NULL, uses first non-NA measurement. initial_P Optional. Initial state uncertainty. NULL, calculated median sampling rate. resample Logical. Whether return regularly resampled data (default: FALSE). resample_freq Numeric. Desired sampling frequency Hz resampling (required resample=TRUE).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"resample=FALSE: numeric vector filtered values corresponding original timestamps resample=TRUE: list containing: time: Vector regular timestamps values: Vector filtered values regular timestamps original_time: Original irregular timestamps original_values: Filtered values original timestamps","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"function implements adaptive Kalman filter accounts irregular sampling intervals. Process variance scaled time difference measurements, allowing proper uncertainty handling variable sampling rates. Key features: Handles irregular sampling intervals Scales process variance time gaps Optional resampling regular intervals Automatic parameter selection based median sampling rate Missing value (NA) handling resampling, function uses linear interpolation warns requested sampling frequency exceeds twice median original sampling rate (Nyquist frequency).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"Resampling considerations: Avoid resampling twice median original sampling rate Consider physical meaning data choosing resample_freq cautious creating artifacts high-frequency resampling Parameter selection guidelines: base_Q controls expected rate change per second R reflect measurement noise level slow-changing signals, reduce base_Q noisy measurements, increase R","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_kalman_irregular.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kalman Filter for Irregular Time Series with Optional Resampling — filter_kalman_irregular","text":"","code":"# Example with irregular sampling measurements <- c(1, 1.1, NA, 0.9, 1.2, NA, 0.8, 1.1) times <- c(0, 0.1, 0.3, 0.35, 0.5, 0.8, 0.81, 1.0)  # Basic filtering with irregular samples filtered <- filter_kalman_irregular(measurements, times)  # Filtering with resampling to 50 Hz filtered_resampled <- filter_kalman_irregular(measurements, times,                                              resample = TRUE,                                              resample_freq = 50) #> Warning: Requested resampling frequency (50 Hz) exceeds twice the median sampling rate (6.66667 Hz). #>             This may lead to poor interpolation.  # Plot results plot(times, measurements, type=\"p\", col=\"blue\") lines(filtered_resampled$time, filtered_resampled$values, col=\"red\")"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"function applies lowpass Butterworth filter signal using forward-backward filtering (filtfilt) achieve zero phase distortion. Butterworth filter maximally flat passband, making ideal many signal processing applications.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"","code":"filter_lowpass(   x,   cutoff_freq,   sampling_rate,   order = 4,   na_action = c(\"linear\", \"spline\", \"stine\", \"locf\", \"value\", \"error\"),   keep_na = FALSE,   ... )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"x Numeric vector containing signal filtered cutoff_freq Cutoff frequency Hz. Frequencies value passed, frequencies attenuated. 0 sampling_rate/2. sampling_rate Sampling rate signal Hz. Must least twice highest frequency component signal (Nyquist criterion). order Filter order (default = 4). Controls steepness frequency rolloff: - Higher orders give sharper cutoffs may introduce ringing - Lower orders give smoother transitions less steep rolloff - Common values practice 2-8 - Values 8 rarely used due numerical instability na_action Method handle NA values filtering. One : - \"linear\": Linear interpolation (default) - \"spline\": Spline interpolation smoother curves - \"stine\": Stineman interpolation preserving data shape - \"locf\": Last observation carried forward - \"value\": Replace constant value - \"error\": Raise error NAs present keep_na Logical indicating whether restore NAs original positions filtering (default = FALSE) ... Additional arguments passed replace_na(). Common options include: - value: Numeric value replacement na_action = \"value\" - min_gap: Minimum gap size interpolate/fill - max_gap: Maximum gap size interpolate/fill","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"Numeric vector containing filtered signal","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"Butterworth filter response falls -6*order dB/octave. cutoff frequency corresponds -3dB point filter's magnitude response. Parameter Selection Guidelines: cutoff_freq: Choose based frequency content want preserve sampling_rate: match data collection rate order: order=2: Gentle rolloff, minimal ringing (~12 dB/octave) order=4: Standard choice, good balance (~24 dB/octave) order=6: Steeper rolloff, ringing (~36 dB/octave) order=8: steep, may significant ringing (~48 dB/octave) Note: low cutoff frequencies (<0.001 Nyquist), order automatically reduced 2 maintain stability. Common values field: Biomechanics: order=2 4 EEG/MEG: order=4 6 Audio processing: order=2 8 Mechanical vibrations: order=2 4 Missing Value Handling: function uses replace_na() internally handling missing values. See ?replace_na detailed information method parameters. NAs can optionally restored original positions filtering using keep_na = TRUE.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"Butterworth, S. (1930). Theory Filter Amplifiers. Wireless Engineer, 7, 536-541.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Butterworth Lowpass Filter to Signal — filter_lowpass","text":"","code":"# Generate example signal: 2 Hz fundamental + 50 Hz noise t <- seq(0, 1, by = 0.001) x <- sin(2*pi*2*t) + 0.5*sin(2*pi*50*t)  # Add some NAs x[sample(length(x), 10)] <- NA  # Basic filtering with linear interpolation for NAs filtered <- filter_lowpass(x, cutoff_freq = 5, sampling_rate = 1000)  # Using spline interpolation with max gap constraint filtered <- filter_lowpass(x, cutoff_freq = 5, sampling_rate = 1000,                           na_action = \"spline\", max_gap = 3)  # Replace NAs with zeros before filtering filtered <- filter_lowpass(x, cutoff_freq = 5, sampling_rate = 1000,                           na_action = \"value\", value = 0)  # Filter but keep NAs in their original positions filtered <- filter_lowpass(x, cutoff_freq = 5, sampling_rate = 1000,                           na_action = \"linear\", keep_na = TRUE)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass_fft.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","title":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","text":"function implements lowpass filter using Fast Fourier Transform (FFT). provides sharp frequency cutoff may introduce ringing artifacts (Gibbs phenomenon).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass_fft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","text":"","code":"filter_lowpass_fft(   x,   cutoff_freq,   sampling_rate,   na_action = c(\"linear\", \"spline\", \"stine\", \"locf\", \"value\", \"error\"),   keep_na = FALSE,   ... )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass_fft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","text":"x Numeric vector containing signal filtered cutoff_freq Cutoff frequency Hz. Frequencies value passed, frequencies attenuated. 0 sampling_rate/2. sampling_rate Sampling rate signal Hz. Must least twice highest frequency component signal (Nyquist criterion). na_action Method handle NA values filtering. One : - \"linear\": Linear interpolation (default) - \"spline\": Spline interpolation smoother curves - \"stine\": Stineman interpolation preserving data shape - \"locf\": Last observation carried forward - \"value\": Replace constant value - \"error\": Raise error NAs present keep_na Logical indicating whether restore NAs original positions filtering (default = FALSE) ... Additional arguments passed replace_na(). Common options include: - value: Numeric value replacement na_action = \"value\" - min_gap: Minimum gap size interpolate/fill - max_gap: Maximum gap size interpolate/fill","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass_fft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","text":"Numeric vector containing filtered signal","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass_fft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","text":"FFT-based filtering applies hard cutoff frequency domain. can advantageous : Precise frequency selection Batch processing long signals Cases sharp frequency cutoffs desired Limitations: May introduce ringing artifacts Assumes periodic signal (can cause edge effects) Less suitable real-time processing Missing Value Handling: function uses replace_na() internally handling missing values. See ?replace_na detailed information method parameters. NAs can optionally restored original positions filtering using keep_na = TRUE.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_lowpass_fft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply FFT-based Lowpass Filter to Signal — filter_lowpass_fft","text":"","code":"# Generate example signal with mixed frequencies t <- seq(0, 1, by = 0.001) x <- sin(2*pi*2*t) + sin(2*pi*50*t)  # Add some NAs x[sample(length(x), 10)] <- NA  # Basic filtering with linear interpolation for NAs filtered <- filter_lowpass_fft(x, cutoff_freq = 5, sampling_rate = 1000)  # Using spline interpolation with max gap constraint filtered <- filter_lowpass_fft(x, cutoff_freq = 5, sampling_rate = 1000,                               na_action = \"spline\", max_gap = 3)  # Replace NAs with zeros before filtering filtered <- filter_lowpass_fft(x, cutoff_freq = 5, sampling_rate = 1000,                               na_action = \"value\", value = 0)  # Filter but keep NAs in their original positions filtered <- filter_lowpass_fft(x, cutoff_freq = 5, sampling_rate = 1000,                               na_action = \"linear\", keep_na = TRUE)  # Compare with Butterworth filter butter_filtered <- filter_lowpass(x, 5, 1000)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_confidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter low-confidence values in a dataset — filter_na_confidence","title":"Filter low-confidence values in a dataset — filter_na_confidence","text":"function replaces values columns x, y, confidence NA confidence values specified threshold.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_confidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter low-confidence values in a dataset — filter_na_confidence","text":"","code":"filter_na_confidence(data, threshold = 0.6)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_confidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter low-confidence values in a dataset — filter_na_confidence","text":"data data frame containing columns x, y, confidence. threshold numeric value specifying minimum confidence level retain data. Default 0.6.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_confidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter low-confidence values in a dataset — filter_na_confidence","text":"data frame structure input, x, y, confidence values replaced NA confidence threshold.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_confidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter low-confidence values in a dataset — filter_na_confidence","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data <- dplyr::tibble(   x = 1:5,   y = 6:10,   confidence = c(0.5, 0.7, 0.4, 0.8, 0.9) ) filter_na_confidence(data, threshold = 0.6) #> # A tibble: 5 × 3 #>       x     y confidence #>   <int> <int>      <dbl> #> 1    NA    NA       NA   #> 2     2     7        0.7 #> 3    NA    NA       NA   #> 4     4     9        0.8 #> 5     5    10        0.9"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter coordinates outside a region of interest (ROI) — filter_na_roi","title":"Filter coordinates outside a region of interest (ROI) — filter_na_roi","text":"Filters coordinates fall outside specified region interest setting NA. ROI can either rectangular (defined min/max coordinates) circular (defined center radius).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter coordinates outside a region of interest (ROI) — filter_na_roi","text":"","code":"filter_na_roi(   data,   x_min = NULL,   x_max = NULL,   y_min = NULL,   y_max = NULL,   x_center = NULL,   y_center = NULL,   radius = NULL )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter coordinates outside a region of interest (ROI) — filter_na_roi","text":"data data frame containing 'x' 'y' coordinates x_min Minimum x-coordinate rectangular ROI x_max Maximum x-coordinate rectangular ROI y_min Minimum y-coordinate rectangular ROI y_max Maximum y-coordinate rectangular ROI x_center x-coordinate circle center circular ROI y_center y-coordinate circle center circular ROI radius Radius circular ROI","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter coordinates outside a region of interest (ROI) — filter_na_roi","text":"data frame coordinates outside ROI set NA","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter coordinates outside a region of interest (ROI) — filter_na_roi","text":"","code":"# Create sample data sample_data <- expand.grid(   x = seq(0, 100, by = 10),   y = seq(0, 100, by = 10) ) |> as.data.frame()  # Rectangular ROI example sample_data |>   filter_na_roi(x_min = 20, x_max = 80, y_min = 20, y_max = 80) #>      x  y #> 1   NA NA #> 2   NA NA #> 3   NA NA #> 4   NA NA #> 5   NA NA #> 6   NA NA #> 7   NA NA #> 8   NA NA #> 9   NA NA #> 10  NA NA #> 11  NA NA #> 12  NA NA #> 13  NA NA #> 14  NA NA #> 15  NA NA #> 16  NA NA #> 17  NA NA #> 18  NA NA #> 19  NA NA #> 20  NA NA #> 21  NA NA #> 22  NA NA #> 23  NA NA #> 24  NA NA #> 25  20 20 #> 26  30 20 #> 27  40 20 #> 28  50 20 #> 29  60 20 #> 30  70 20 #> 31  80 20 #> 32  NA NA #> 33  NA NA #> 34  NA NA #> 35  NA NA #> 36  20 30 #> 37  30 30 #> 38  40 30 #> 39  50 30 #> 40  60 30 #> 41  70 30 #> 42  80 30 #> 43  NA NA #> 44  NA NA #> 45  NA NA #> 46  NA NA #> 47  20 40 #> 48  30 40 #> 49  40 40 #> 50  50 40 #> 51  60 40 #> 52  70 40 #> 53  80 40 #> 54  NA NA #> 55  NA NA #> 56  NA NA #> 57  NA NA #> 58  20 50 #> 59  30 50 #> 60  40 50 #> 61  50 50 #> 62  60 50 #> 63  70 50 #> 64  80 50 #> 65  NA NA #> 66  NA NA #> 67  NA NA #> 68  NA NA #> 69  20 60 #> 70  30 60 #> 71  40 60 #> 72  50 60 #> 73  60 60 #> 74  70 60 #> 75  80 60 #> 76  NA NA #> 77  NA NA #> 78  NA NA #> 79  NA NA #> 80  20 70 #> 81  30 70 #> 82  40 70 #> 83  50 70 #> 84  60 70 #> 85  70 70 #> 86  80 70 #> 87  NA NA #> 88  NA NA #> 89  NA NA #> 90  NA NA #> 91  20 80 #> 92  30 80 #> 93  40 80 #> 94  50 80 #> 95  60 80 #> 96  70 80 #> 97  80 80 #> 98  NA NA #> 99  NA NA #> 100 NA NA #> 101 NA NA #> 102 NA NA #> 103 NA NA #> 104 NA NA #> 105 NA NA #> 106 NA NA #> 107 NA NA #> 108 NA NA #> 109 NA NA #> 110 NA NA #> 111 NA NA #> 112 NA NA #> 113 NA NA #> 114 NA NA #> 115 NA NA #> 116 NA NA #> 117 NA NA #> 118 NA NA #> 119 NA NA #> 120 NA NA #> 121 NA NA  # Circular ROI example sample_data |>   filter_na_roi(x_center = 50, y_center = 50, radius = 25) #>      x  y #> 1   NA NA #> 2   NA NA #> 3   NA NA #> 4   NA NA #> 5   NA NA #> 6   NA NA #> 7   NA NA #> 8   NA NA #> 9   NA NA #> 10  NA NA #> 11  NA NA #> 12  NA NA #> 13  NA NA #> 14  NA NA #> 15  NA NA #> 16  NA NA #> 17  NA NA #> 18  NA NA #> 19  NA NA #> 20  NA NA #> 21  NA NA #> 22  NA NA #> 23  NA NA #> 24  NA NA #> 25  NA NA #> 26  NA NA #> 27  NA NA #> 28  NA NA #> 29  NA NA #> 30  NA NA #> 31  NA NA #> 32  NA NA #> 33  NA NA #> 34  NA NA #> 35  NA NA #> 36  NA NA #> 37  NA NA #> 38  40 30 #> 39  50 30 #> 40  60 30 #> 41  NA NA #> 42  NA NA #> 43  NA NA #> 44  NA NA #> 45  NA NA #> 46  NA NA #> 47  NA NA #> 48  30 40 #> 49  40 40 #> 50  50 40 #> 51  60 40 #> 52  70 40 #> 53  NA NA #> 54  NA NA #> 55  NA NA #> 56  NA NA #> 57  NA NA #> 58  NA NA #> 59  30 50 #> 60  40 50 #> 61  50 50 #> 62  60 50 #> 63  70 50 #> 64  NA NA #> 65  NA NA #> 66  NA NA #> 67  NA NA #> 68  NA NA #> 69  NA NA #> 70  30 60 #> 71  40 60 #> 72  50 60 #> 73  60 60 #> 74  70 60 #> 75  NA NA #> 76  NA NA #> 77  NA NA #> 78  NA NA #> 79  NA NA #> 80  NA NA #> 81  NA NA #> 82  40 70 #> 83  50 70 #> 84  60 70 #> 85  NA NA #> 86  NA NA #> 87  NA NA #> 88  NA NA #> 89  NA NA #> 90  NA NA #> 91  NA NA #> 92  NA NA #> 93  NA NA #> 94  NA NA #> 95  NA NA #> 96  NA NA #> 97  NA NA #> 98  NA NA #> 99  NA NA #> 100 NA NA #> 101 NA NA #> 102 NA NA #> 103 NA NA #> 104 NA NA #> 105 NA NA #> 106 NA NA #> 107 NA NA #> 108 NA NA #> 109 NA NA #> 110 NA NA #> 111 NA NA #> 112 NA NA #> 113 NA NA #> 114 NA NA #> 115 NA NA #> 116 NA NA #> 117 NA NA #> 118 NA NA #> 119 NA NA #> 120 NA NA #> 121 NA NA"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter coordinates outside a circular ROI — filter_na_roi_circle","title":"Filter coordinates outside a circular ROI — filter_na_roi_circle","text":"Helper function filter_na_roi() handles circular ROIs. Sets coordinates NA fall outside specified circle.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter coordinates outside a circular ROI — filter_na_roi_circle","text":"","code":"filter_na_roi_circle(data, x_center, y_center, radius)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter coordinates outside a circular ROI — filter_na_roi_circle","text":"data data frame containing 'x' 'y' coordinates x_center, y_center Center coordinates circular ROI radius Radius circular ROI","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter coordinates outside a circular ROI — filter_na_roi_circle","text":"data frame coordinates outside circular ROI set NA","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_square.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter coordinates outside a rectangular ROI — filter_na_roi_square","title":"Filter coordinates outside a rectangular ROI — filter_na_roi_square","text":"Helper function filter_na_roi() handles rectangular ROIs. Sets coordinates NA fall outside specified bounds.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter coordinates outside a rectangular ROI — filter_na_roi_square","text":"","code":"filter_na_roi_square(data, x_min, x_max, y_min, y_max)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter coordinates outside a rectangular ROI — filter_na_roi_square","text":"data data frame containing 'x' 'y' coordinates x_min, x_max, y_min, y_max Bounds rectangular ROI","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_roi_square.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter coordinates outside a rectangular ROI — filter_na_roi_square","text":"data frame coordinates outside rectangular ROI set NA","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter values by speed threshold — filter_na_speed","title":"Filter values by speed threshold — filter_na_speed","text":"function filters values dataset calculated speed exceeds specified threshold. Values x, y, confidence replaced NA corresponding speed exceeds threshold. Speed calculated using calculate_kinematics function.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_speed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter values by speed threshold — filter_na_speed","text":"","code":"filter_na_speed(data, threshold = \"auto\")"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_speed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter values by speed threshold — filter_na_speed","text":"data data frame containing following required columns: x: x-coordinates y: y-coordinates time: time values Optional column: confidence: confidence values observation threshold numeric value specifying speed threshold, \"auto\". numeric: Observations speeds greater value x, y, confidence values replaced NA \"auto\": Sets threshold mean speed + 3 standard deviations","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_speed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter values by speed threshold — filter_na_speed","text":"data frame columns input data, values replaced NA speed exceeds threshold.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_speed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter values by speed threshold — filter_na_speed","text":"speed calculated using calculate_kinematics function, computes translational velocity (v_translation) kinematic parameters. using threshold = \"auto\", function calculates threshold mean speed plus three standard deviations, assumes normally distributed speeds.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_na_speed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter values by speed threshold — filter_na_speed","text":"","code":"if (FALSE) { # \\dontrun{ data <- dplyr::tibble(   time = 1:5,   x = c(1, 2, 4, 7, 11),   y = c(1, 1, 2, 3, 5),   confidence = c(0.8, 0.9, 0.7, 0.85, 0.6) )  # Filter data by a speed threshold of 3 filter_by_speed(data, threshold = 3)  # Use automatic threshold filter_by_speed(data, threshold = \"auto\") } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Mean Filter — filter_rollmean","title":"Apply Rolling Mean Filter — filter_rollmean","text":"Applies rolling mean filter numeric vector using roll package.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Mean Filter — filter_rollmean","text":"","code":"filter_rollmean(x, window_width = 5, min_obs = 1, ...)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Mean Filter — filter_rollmean","text":"x Numeric vector filter window_width Integer specifying window size rolling calculation min_obs Minimum number non-NA values required (default: 1) ... Additional parameters passed roll::roll_mean()","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Mean Filter — filter_rollmean","text":"Filtered numeric vector","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmedian.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Median Filter — filter_rollmedian","title":"Apply Rolling Median Filter — filter_rollmedian","text":"Applies rolling median filter numeric vector using roll package.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmedian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Median Filter — filter_rollmedian","text":"","code":"filter_rollmedian(x, window_width = 5, min_obs = 1, ...)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmedian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Median Filter — filter_rollmedian","text":"x Numeric vector filter window_width Integer specifying window size rolling calculation min_obs Minimum number non-NA values required (default: 1) ... Additional parameters passed roll::roll_median","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_rollmedian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Median Filter — filter_rollmedian","text":"Filtered numeric vector","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"function applies Savitzky-Golay filter smooth movement data preserving higher moments (peaks, valleys) better moving average filters. implementation uses zero-phase filtering prevent temporal shifts data.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"","code":"filter_sgolay(   x,   sampling_rate,   window_size = ceiling(sampling_rate/10) * 2 + 1,   order = 3,   preserve_edges = FALSE,   na_action = \"linear\",   keep_na = FALSE,   ... )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"x Numeric vector containing movement data filtered sampling_rate Sampling rate data Hz. Must match data collection rate (e.g., 60 60 FPS motion capture). window_size Window size samples (must odd). Controls amount smoothing. Larger windows give smoothing may -attenuate genuine movement features. Default automatically calculated sampling_rate/10 (rounded nearest odd number). order Polynomial order (default = 3). Controls well filter preserves higher-order moments data: - order=2: Preserves position, velocity (good smooth movements) - order=3: Also preserves acceleration (good movement data) - order=4: Also preserves jerk (good quick movements) - order=5: Maximum preservation (may retain much noise) preserve_edges Logical indicating whether use progressively smaller windows beginning end signal reduce edge effects (default = FALSE). Note: affects signal endpoints, internal discontinuities. na_action Method handle NA values filtering. One : - \"linear\": Linear interpolation (default) - \"spline\": Spline interpolation smoother curves - \"locf\": Last observation carried forward - \"value\": Replace constant value - \"error\": Raise error NAs present keep_na Logical indicating whether restore NAs original positions filtering (default = FALSE) ... Additional arguments passed replace_na()","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"Numeric vector containing filtered movement data","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"Savitzky-Golay filter fits successive polynomials sliding windows data. approach preserves higher moments data better simple moving averages Butterworth filters, making particularly suitable movement data preserving features like peaks valleys important. Edge Handling: preserve_edges = TRUE, function uses progressively smaller windows near beginning end signal reduce endpoint distortion. affects signal endpoints - detect handle internal discontinuities sharp events within data. Parameter Selection Guidelines: window_size: 60 FPS: 5-15 frames (83-250ms) quick movements, 15-31 slow movements 120 FPS: 7-21 frames (58-175ms) quick movements, 21-51 slow movements 500 FPS: 25-75 frames (50-150ms) quick movements, 75-151 slow movements default window_size = sampling_rate/10 works well typical human movement. order: order=2: Smooth movements, position analysis order=3: movement analysis (default) order=4: Quick movements, sports analysis order=5: quick movements, impact analysis Note: order must less window_size Common values application: Gait analysis (60 FPS): window_size=15, order=3 Sports biomechanics (120 FPS): window_size=21, order=4 Impact analysis (500 FPS): window_size=51, order=4 Posture analysis (60 FPS): window_size=31, order=2","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"Savitzky, ., & Golay, M.J.E. (1964). Smoothing Differentiation Data Simplified Least Squares Procedures. Analytical Chemistry, 36(8), 1627-1639.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/filter_sgolay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Savitzky-Golay Filter to Movement Data — filter_sgolay","text":"","code":"# Generate example movement data: smooth motion + noise t <- seq(0, 5, by = 1/60)  # 60 FPS data x <- sin(2*pi*0.5*t) + rnorm(length(t), 0, 0.1)  # Basic filtering with default parameters (60 FPS) filtered <- filter_sgolay(x, sampling_rate = 60)  # Adjusting parameters for quick movements filtered_quick <- filter_sgolay(x, sampling_rate = 60,                                window_size = 11, order = 4)  # High-speed camera data (500 FPS) with larger window filtered_high <- filter_sgolay(x, sampling_rate = 500,                               window_size = 51, order = 3)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Peaks in Time Series Data — find_peaks","title":"Find Peaks in Time Series Data — find_peaks","text":"Identifies peaks (local maxima) numeric time series, options filter peaks based height prominence. function handles missing values (NA) appropriately compatible dplyr's mutate. Includes flexible handling plateaus adjustable window size peak detection.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Peaks in Time Series Data — find_peaks","text":"","code":"find_peaks(   x,   min_height = -Inf,   min_prominence = 0,   plateau_handling = c(\"strict\", \"middle\", \"first\", \"last\", \"all\"),   window_size = 3 )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Peaks in Time Series Data — find_peaks","text":"x Numeric vector containing time series data min_height Minimum height threshold peaks (default: -Inf) min_prominence Minimum prominence threshold peaks (default: 0) plateau_handling String specifying handle plateaus. One : \"strict\" (default): points plateau peaks \"middle\": Middle point(s) plateau peaks \"first\": First point plateau peak \"last\": Last point plateau peak \"\": points plateau peaks window_size Integer specifying size window use peak detection (default: 3). Must odd >= 3. Larger values detect peaks wider ranges.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Peaks in Time Series Data — find_peaks","text":"logical vector length input : TRUE indicates confirmed peak FALSE indicates non-peak NA indicates peak status determined due missing data","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Peaks in Time Series Data — find_peaks","text":"function uses sliding window algorithm peak detection (window size specified window_size parameter), combined region-based prominence calculation method similar described Palshikar (2009).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Peaks in Time Series Data — find_peaks","text":"function optimized use dplyr's mutate noisy data, consider using larger window_size smoothing series peak detection Adjust min_height min_prominence filter unwanted peaks Choose plateau_handling based specific needs Larger window_size values result stringent peak detection","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"peak-detection","dir":"Reference","previous_headings":"","what":"Peak Detection","title":"Find Peaks in Time Series Data — find_peaks","text":"point considered peak highest point within window (default window_size 3 compares point immediate neighbors). first last (window_size-1)/2 points series peaks marked NA. Larger window sizes identify peaks dominate wider range, typically resulting fewer peaks detected.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"prominence","dir":"Reference","previous_headings":"","what":"Prominence","title":"Find Peaks in Time Series Data — find_peaks","text":"Prominence measures much peak stands relative surrounding values. calculated height peak minus height highest minimum peak higher peaks (end series higher peaks exist).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"plateau-handling","dir":"Reference","previous_headings":"","what":"Plateau Handling","title":"Find Peaks in Time Series Data — find_peaks","text":"Plateaus (sequences identical values) handled according plateau_handling parameter: strict: points plateau considered peaks (traditional behavior) middle: plateaus odd length, middle point marked peak. plateaus even length, two middle points marked peaks. first: first point plateau marked peak last: last point plateau marked peak : Every point plateau marked peak Note cases, plateau must still qualify peak relative surrounding window (.e., higher points window).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"missing-values-na-handling","dir":"Reference","previous_headings":"","what":"Missing Values (NA) Handling","title":"Find Peaks in Time Series Data — find_peaks","text":"function uses following rules handling NAs: point NA, peak (returns NA) point window NA, peak status determined (returns NA) prominence calculations, stretches NAs handled appropriately minimum window_size points required; shorter series return NAs","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Peaks in Time Series Data — find_peaks","text":"Palshikar, G. (2009). Simple Algorithms Peak Detection Time-Series. Proc. 1st Int. Conf. Advanced Data Analysis, Business Analytics Intelligence.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Peaks in Time Series Data — find_peaks","text":"","code":"# Basic usage with default window size (3) x <- c(1, 3, 2, 6, 4, 5, 2) find_peaks(x) #> [1]    NA  TRUE FALSE  TRUE FALSE  TRUE    NA  # With larger window size find_peaks(x, window_size = 5)  # More stringent peak detection #> [1]    NA    NA FALSE  TRUE FALSE    NA    NA  # With minimum height find_peaks(x, min_height = 4, window_size = 3) #> [1]    NA FALSE FALSE  TRUE FALSE  TRUE    NA  # With plateau handling x <- c(1, 3, 3, 3, 2, 4, 4, 1) find_peaks(x, plateau_handling = \"middle\", window_size = 3)  # Middle of plateaus #> [1]    NA FALSE  TRUE FALSE FALSE  TRUE  TRUE    NA find_peaks(x, plateau_handling = \"all\", window_size = 5)     # All plateau points #> [1]    NA    NA FALSE FALSE FALSE  TRUE  TRUE    NA  # With missing values x <- c(1, 3, NA, 6, 4, NA, 2) find_peaks(x) #> [1] NA NA NA NA NA NA NA  # Usage with dplyr library(dplyr) data_frame(   time = 1:10,   value = c(1, 3, 7, 4, 2, 6, 5, 8, 4, 2) ) %>%   mutate(peaks = find_peaks(value, window_size = 3)) #> Warning: `data_frame()` was deprecated in tibble 1.1.0. #> ℹ Please use `tibble()` instead. #> # A tibble: 10 × 3 #>     time value peaks #>    <int> <dbl> <lgl> #>  1     1     1 NA    #>  2     2     3 FALSE #>  3     3     7 TRUE  #>  4     4     4 FALSE #>  5     5     2 FALSE #>  6     6     6 TRUE  #>  7     7     5 FALSE #>  8     8     8 TRUE  #>  9     9     4 FALSE #> 10    10     2 NA"},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Troughs in Time Series Data — find_troughs","title":"Find Troughs in Time Series Data — find_troughs","text":"Identifies troughs (local minima) numeric time series, options filter troughs based height prominence. function handles missing values (NA) appropriately compatible dplyr's mutate. Includes flexible handling plateaus adjustable window size trough detection.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Troughs in Time Series Data — find_troughs","text":"","code":"find_troughs(   x,   max_height = Inf,   min_prominence = 0,   plateau_handling = c(\"strict\", \"middle\", \"first\", \"last\", \"all\"),   window_size = 3 )"},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Troughs in Time Series Data — find_troughs","text":"x Numeric vector containing time series data max_height Maximum height threshold troughs (default: Inf) min_prominence Minimum prominence threshold troughs (default: 0) plateau_handling String specifying handle plateaus. One : \"strict\" (default): points plateau troughs \"middle\": Middle point(s) plateau troughs \"first\": First point plateau trough \"last\": Last point plateau trough \"\": points plateau troughs window_size Integer specifying size window use trough detection (default: 3). Must odd >= 3. Larger values detect troughs wider ranges.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Troughs in Time Series Data — find_troughs","text":"logical vector length input : TRUE indicates confirmed trough FALSE indicates non-trough NA indicates trough status determined due missing data","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Troughs in Time Series Data — find_troughs","text":"function uses sliding window algorithm trough detection (window size specified window_size parameter), combined region-based prominence calculation method similar described Palshikar (2009).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find Troughs in Time Series Data — find_troughs","text":"function optimized use dplyr's mutate noisy data, consider using larger window_size smoothing series trough detection Adjust max_height min_prominence filter unwanted troughs Choose plateau_handling based specific needs Larger window_size values result stringent trough detection","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"trough-detection","dir":"Reference","previous_headings":"","what":"Trough Detection","title":"Find Troughs in Time Series Data — find_troughs","text":"point considered trough lowest point within window (default window_size 3 compares point immediate neighbors). first last (window_size-1)/2 points series troughs marked NA. Larger window sizes identify troughs dominate wider range, typically resulting fewer troughs detected.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"prominence","dir":"Reference","previous_headings":"","what":"Prominence","title":"Find Troughs in Time Series Data — find_troughs","text":"Prominence measures much trough stands relative surrounding values. calculated height lowest maximum trough lower troughs (end series lower troughs exist) minus height trough.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"plateau-handling","dir":"Reference","previous_headings":"","what":"Plateau Handling","title":"Find Troughs in Time Series Data — find_troughs","text":"Plateaus (sequences identical values) handled according plateau_handling parameter: strict: points plateau considered troughs (traditional behavior) middle: plateaus odd length, middle point marked trough. plateaus even length, two middle points marked troughs. first: first point plateau marked trough last: last point plateau marked trough : Every point plateau marked trough Note cases, plateau must still qualify trough relative surrounding window (.e., lower points window).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"missing-values-na-handling","dir":"Reference","previous_headings":"","what":"Missing Values (NA) Handling","title":"Find Troughs in Time Series Data — find_troughs","text":"function uses following rules handling NAs: point NA, trough (returns NA) point window NA, trough status determined (returns NA) prominence calculations, stretches NAs handled appropriately minimum window_size points required; shorter series return NAs","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find Troughs in Time Series Data — find_troughs","text":"Palshikar, G. (2009). Simple Algorithms Peak Detection Time-Series. Proc. 1st Int. Conf. Advanced Data Analysis, Business Analytics Intelligence.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/find_troughs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Troughs in Time Series Data — find_troughs","text":"","code":"# Basic usage with default window size (3) x <- c(5, 3, 4, 1, 4, 2, 5) find_troughs(x) #> [1]    NA  TRUE FALSE  TRUE FALSE  TRUE    NA  # With larger window size find_troughs(x, window_size = 5)  # More stringent trough detection #> [1]    NA    NA FALSE  TRUE FALSE    NA    NA  # With maximum height find_troughs(x, max_height = 3, window_size = 3) #> [1]    NA FALSE FALSE  TRUE FALSE  TRUE    NA  # With plateau handling x <- c(5, 2, 2, 2, 3, 1, 1, 4) find_troughs(x, plateau_handling = \"middle\", window_size = 3)  # Middle of plateaus #> [1]    NA FALSE  TRUE FALSE FALSE  TRUE  TRUE    NA find_troughs(x, plateau_handling = \"all\", window_size = 5)     # All plateau points #> [1]    NA    NA FALSE FALSE FALSE  TRUE  TRUE    NA  # With missing values x <- c(5, 3, NA, 1, 4, NA, 5) find_troughs(x) #> [1] NA NA NA NA NA NA NA  # Usage with dplyr library(dplyr) data_frame(   time = 1:10,   value = c(5, 3, 1, 4, 2, 1, 3, 0, 4, 5) ) %>%   mutate(troughs = find_troughs(value, window_size = 3)) #> # A tibble: 10 × 3 #>     time value troughs #>    <int> <dbl> <lgl>   #>  1     1     5 NA      #>  2     2     3 FALSE   #>  3     3     1 TRUE    #>  4     4     4 FALSE   #>  5     5     2 FALSE   #>  6     6     1 TRUE    #>  7     7     3 FALSE   #>  8     8     0 TRUE    #>  9     9     4 FALSE   #> 10    10     5 NA"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values Using Various Methods — replace_na","title":"Replace Missing Values Using Various Methods — replace_na","text":"wrapper function replaces missing values using various interpolation filling methods.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values Using Various Methods — replace_na","text":"","code":"replace_na(x, method = \"linear\", value = NULL, min_gap = 1, max_gap = Inf, ...)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values Using Various Methods — replace_na","text":"x vector containing numeric data missing values (NAs) method Character string specifying replacement method: \"linear\": Linear interpolation (default) \"spline\": Spline interpolation smoother curves \"stine\": Stineman interpolation preserving data shape \"locf\": Last observation carried forward \"value\": Replace constant value value Numeric value replacement method = \"value\" min_gap Integer specifying minimum gap size interpolate/fill. Gaps shorter left NA. Default 1 (handle gaps). max_gap Integer Inf specifying maximum gap size interpolate/fill. Gaps longer left NA. Default Inf (upper limit). ... Additional parameters passed underlying interpolation functions","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing Values Using Various Methods — replace_na","text":"numeric vector NA values replaced according specified method gap length criteria met.","code":""},{"path":[]},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Missing Values Using Various Methods — replace_na","text":"","code":"if (FALSE) { # \\dontrun{ x <- c(1, NA, NA, 4, 5, NA, NA, NA, 9)  # Different methods replace_na(x, method = \"linear\") replace_na(x, method = \"spline\") replace_na(x, method = \"stine\") replace_na(x, method = \"locf\") replace_na(x, method = \"value\", value = 0)  # With gap constraints replace_na(x, method = \"linear\", min_gap = 2) replace_na(x, method = \"spline\", max_gap = 2) replace_na(x, method = \"linear\", min_gap = 2, max_gap = 3) } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values Using Linear Interpolation — replace_na_linear","title":"Replace Missing Values Using Linear Interpolation — replace_na_linear","text":"Replaces missing values using linear interpolation, control minimum maximum gap sizes interpolate.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values Using Linear Interpolation — replace_na_linear","text":"","code":"replace_na_linear(x, min_gap = 1, max_gap = Inf, ...)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values Using Linear Interpolation — replace_na_linear","text":"x vector containing numeric data missing values (NAs) min_gap Integer specifying minimum gap size interpolate. Gaps shorter left NA. Default 1 (interpolate gaps). max_gap Integer Inf specifying maximum gap size interpolate. Gaps longer left NA. Default Inf (upper limit). ... Additional parameters passed stats::approx","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing Values Using Linear Interpolation — replace_na_linear","text":"numeric vector NA values replaced interpolated values gap length criteria met.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_linear.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Missing Values Using Linear Interpolation — replace_na_linear","text":"function applies minimum maximum gap criteria: Gaps shorter min_gap left NA Gaps longer max_gap left NA gaps meet criteria interpolated parameters specified, min_gap must less equal max_gap.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Missing Values Using Linear Interpolation — replace_na_linear","text":"","code":"if (FALSE) { # \\dontrun{ x <- c(1, NA, NA, 4, 5, NA, NA, NA, 9) replace_na_linear(x)  # interpolates all gaps replace_na_linear(x, min_gap = 2)  # only gaps >= 2 replace_na_linear(x, max_gap = 2)  # only gaps <= 2 replace_na_linear(x, min_gap = 2, max_gap = 3)  # gaps between 2 and 3 } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_locf.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","title":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","text":"Replaces missing values carrying forward last observed value, control minimum maximum gap sizes fill.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_locf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","text":"","code":"replace_na_locf(x, min_gap = 1, max_gap = Inf)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_locf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","text":"x vector containing numeric data missing values (NAs) min_gap Integer specifying minimum gap size fill. Gaps shorter left NA. Default 1 (fill gaps). max_gap Integer Inf specifying maximum gap size fill. Gaps longer left NA. Default Inf (upper limit).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_locf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","text":"numeric vector NA values replaced last observed value gap length criteria met.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_locf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","text":"function applies minimum maximum gap criteria: Gaps shorter min_gap left NA Gaps longer max_gap left NA gaps meet criteria filled parameters specified, min_gap must less equal max_gap.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_locf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Missing Values Using Last Observation Carried Forward — replace_na_locf","text":"","code":"if (FALSE) { # \\dontrun{ x <- c(1, NA, NA, 4, 5, NA, NA, NA, 9) replace_na_locf(x)  # fills all gaps replace_na_locf(x, min_gap = 2)  # only gaps >= 2 replace_na_locf(x, max_gap = 2)  # only gaps <= 2 replace_na_locf(x, min_gap = 2, max_gap = 3)  # gaps between 2 and 3 } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_spline.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values Using Spline Interpolation — replace_na_spline","title":"Replace Missing Values Using Spline Interpolation — replace_na_spline","text":"Replaces missing values using spline interpolation, control minimum maximum gap sizes interpolate.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_spline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values Using Spline Interpolation — replace_na_spline","text":"","code":"replace_na_spline(x, min_gap = 1, max_gap = Inf, ...)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_spline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values Using Spline Interpolation — replace_na_spline","text":"x vector containing numeric data missing values (NAs) min_gap Integer specifying minimum gap size interpolate. Gaps shorter left NA. Default 1 (interpolate gaps). max_gap Integer Inf specifying maximum gap size interpolate. Gaps longer left NA. Default Inf (upper limit). ... Additional parameters passed stats::spline","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_spline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing Values Using Spline Interpolation — replace_na_spline","text":"numeric vector NA values replaced interpolated values gap length criteria met.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_spline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Missing Values Using Spline Interpolation — replace_na_spline","text":"function applies minimum maximum gap criteria: Gaps shorter min_gap left NA Gaps longer max_gap left NA gaps meet criteria interpolated parameters specified, min_gap must less equal max_gap.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_spline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Missing Values Using Spline Interpolation — replace_na_spline","text":"","code":"if (FALSE) { # \\dontrun{ x <- c(1, NA, NA, 4, 5, NA, NA, NA, 9) replace_na_spline(x)  # interpolates all gaps replace_na_spline(x, min_gap = 2)  # only gaps >= 2 replace_na_spline(x, max_gap = 2)  # only gaps <= 2 replace_na_spline(x, min_gap = 2, max_gap = 3)  # gaps between 2 and 3 } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_stine.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","title":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","text":"Replaces missing values using Stineman interpolation, control minimum maximum gap sizes interpolate.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_stine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","text":"","code":"replace_na_stine(x, min_gap = 1, max_gap = Inf, ...)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_stine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","text":"x vector containing numeric data missing values (NAs) min_gap Integer specifying minimum gap size interpolate. Gaps shorter left NA. Default 1 (interpolate gaps). max_gap Integer Inf specifying maximum gap size interpolate. Gaps longer left NA. Default Inf (upper limit). ... Additional parameters passed stinepack::stinterp","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_stine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","text":"numeric vector NA values replaced interpolated values gap length criteria met.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_stine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","text":"function applies minimum maximum gap criteria: Gaps shorter min_gap left NA Gaps longer max_gap left NA gaps meet criteria interpolated parameters specified, min_gap must less equal max_gap. Stineman interpolation particularly good preserving shape data avoiding overshooting.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_stine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Missing Values Using Stineman Interpolation — replace_na_stine","text":"","code":"if (FALSE) { # \\dontrun{ x <- c(1, NA, NA, 4, 5, NA, NA, NA, 9) replace_na_stine(x)  # interpolates all gaps replace_na_stine(x, min_gap = 2)  # only gaps >= 2 replace_na_stine(x, max_gap = 2)  # only gaps <= 2 replace_na_stine(x, min_gap = 2, max_gap = 3)  # gaps between 2 and 3 } # }"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Missing Values with a Constant Value — replace_na_value","title":"Replace Missing Values with a Constant Value — replace_na_value","text":"Replaces missing values specified constant value, control minimum maximum gap sizes fill.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Missing Values with a Constant Value — replace_na_value","text":"","code":"replace_na_value(x, value, min_gap = 1, max_gap = Inf)"},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Missing Values with a Constant Value — replace_na_value","text":"x vector containing numeric data missing values (NAs) value Numeric value use replacement min_gap Integer specifying minimum gap size fill. Gaps shorter left NA. Default 1 (fill gaps). max_gap Integer Inf specifying maximum gap size fill. Gaps longer left NA. Default Inf (upper limit).","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Missing Values with a Constant Value — replace_na_value","text":"numeric vector NA values replaced specified value gap length criteria met.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace Missing Values with a Constant Value — replace_na_value","text":"function applies minimum maximum gap criteria: Gaps shorter min_gap left NA Gaps longer max_gap left NA gaps meet criteria filled parameters specified, min_gap must less equal max_gap.","code":""},{"path":"http://www.roald-arboel.com/aniprocess/reference/replace_na_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace Missing Values with a Constant Value — replace_na_value","text":"","code":"if (FALSE) { # \\dontrun{ x <- c(1, NA, NA, 4, 5, NA, NA, NA, 9) replace_na_value(x, value = 0)  # fills all gaps with 0 replace_na_value(x, value = -1, min_gap = 2)  # only gaps >= 2 replace_na_value(x, value = -999, max_gap = 2)  # only gaps <= 2 replace_na_value(x, value = 0, min_gap = 2, max_gap = 3)  # gaps between 2 and 3 } # }"}]
